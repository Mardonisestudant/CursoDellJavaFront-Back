TRANSCRIÇÃO DOS CÓDIGOS

EXEMPLO 1

package br.com.lead.modelo;

import java.time.LocalDate;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

@Entity
public class Autor {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer id;

	private String nome;

	@Column(name="data_nascimento")
	private LocalDate dataNascimento;

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public LocalDate getDataNascimento() {
		return dataNascimento;
	}

	public void setDataNascimento(LocalDate dataNascimento) {
		this.dataNascimento = dataNascimento;
	}
}


EXEMPLO 2

<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
		http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0">
	<!-- unidade de persistencia com o nome catalogodefilmes -->
    <persistence-unit name="catalogodefilmes">

        <!-- Implementação do JPA, no nosso caso Hibernate -->
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

        <!-- Aqui são listadas todas as entidades -->
        <class>br.com.lead.modelo.Filme</class>
        <class>br.com.lead.modelo.Autor</class>

        <properties>
            <!-- Propriedades JDBC -->
            <property name="javax.persistence.jdbc.driver" 
                value="com.mysql.jdbc.Driver" />

			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/catalogodefilmes?useTimezone=true&amp;serverTimezone=UTC" />

            <property name="javax.persistence.jdbc.user" value="root" />
            <property name="javax.persistence.jdbc.password" value="admin" />

            <!-- Configurações específicas do Hibernate -->
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect" />

            <property name="hibernate.hbm2ddl.auto" value="update" />
            <property name="hibernate.show_sql" value="true" />
            <property name="hibernate.format_sql" value="true" />
        </properties>
    </persistence-unit>
</persistence>


EXEMPLO 3

@ManyToOne
private Autor autor;

public Autor getAutor() {
	return autor;
}

public void setAutor(Autor autor) {
	this.autor = autor;
}

EXEMPLO 4

@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {		
		String nome = req.getParameter("nome");
		String genero = req.getParameter("genero");
		Integer ano = Integer.valueOf(req.getParameter("ano"));
		
		String nomeAutor = req.getParameter("nomeAutor");
		LocalDate dataNascimentoAutor = LocalDate.parse(req.getParameter("dataNascimentoAutor"));


EXEMPLO 5

	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String nome = req.getParameter("nome");
		String genero = req.getParameter("genero");
		Integer ano = Integer.valueOf(req.getParameter("ano"));
		
		String nomeAutor = req.getParameter("nomeAutor");
		LocalDate dataNascimentoAutor = LocalDate.parse(req.getParameter("dataNascimentoAutor"));
		
		Autor autor = new Autor();
		autor.setDataNascimento(dataNascimentoAutor);
		autor.setNome(nomeAutor);
		
		Filme filme = new Filme(nome, genero, ano);
		filme.setAutor(autor);

        EntityManager em = JPAUtil.getEntityManager();

        em.getTransaction().begin();
        em.persist(autor);
        em.persist(filme);
        em.getTransaction().commit();

        em.close();
	}